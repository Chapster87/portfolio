---
import Base from "@/layouts/Base.astro";
import FeaturesBySection from "@/components/FeaturesBySection.astro"
import { getCollection, getEntry } from "astro:content";
import { markdownify } from "@/lib/utils/textConverter";
import DynamicImg from "@/components/DynamicImg.astro";

const { projectId } = Astro.params;

export async function getStaticPaths() {
  const projectsContent = await getCollection("projectsContent");

  return projectsContent.map((project) => {
    return {
      params: { projectId: project.id },
      props: { project },
    };
  });
}

let sfccAcceleratorData = null;

if (projectId && projectId === "sfcc-accelerator") {
  sfccAcceleratorData = await getEntry('sfccAcceleratorData', 'index');
}

const { project } = Astro.props;
const { data, body } = project;
const { image_hero, title, url, company, platform, start_date, end_date } = data;
---

<Base entry_keys={['projectsContent', projectId]}>
  <section class="main pb-10">
    <div class="bg-base-200 dark:bg-base-content p-3">
      <div class="breadcrumbs container text-base-content !bg-base-200 dark:!bg-base-content text-sm">
        <ul>
          <li><a href="/" class="link">Home</a></li>
          <li><a href="/projects" class="link">Projects</a></li>
          <li class="font-bold">{title}</li>
        </ul>
      </div>
    </div>
    {(image_hero && title) && (
      <div class="website-hero">
        <figure class="flex justify-center mb-4 bg-base-200 dark:bg-base-content">
          {url ? (
            <a href={url} target="_blank" rel="noopener noreferrer nofollow">
              <DynamicImg imagePath={image_hero} altText={`${title} Website Preview`} loading="eager"/>
            </a>
          ) : (
            <DynamicImg imagePath={image_hero} altText={`${title} Website Preview`} loading="eager"/>
          )}
        </figure>
      </div>
    )}
    <div class="container intersect-once intersect motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade">
      <div class="flex flex-col md:flex-row md:items-end justify-between mb-4">
        {title && (
          url ? (
            <a href={url} target="_blank" rel="noopener noreferrer nofollow">
              <h1 class="leading-none mb-0">{title}</h1>
            </a>
          ) : (
            <h1 class="leading-none mb-0">{title}</h1>
          )
        )}
        {url && (
          <a href={url} class="link link-primary font-bold" target="_blank" rel="noopener noreferrer nofollow">View Website</a>
        )}
      </div>
      <div class="flex flex-col lg:flex-row lg:items-center p-0 py-2 border-y-2 border-base-300 dark:border-base-content mb-5">
        {(start_date || end_date) && (
          <div class="text-md">
            <span class="font-bold">Project Date: </span>
            <span>
              {start_date}
              {(end_date && start_date) && (" - ")}
              {end_date}
            </span>
          </div>
        )}
        {company && (
          <div class="text-md py-2 lg:py-0 lg:mx-7">
            <span class="font-bold">Employer: </span>
            <span>{company}</span>
          </div>
        )}
        {platform && (
          <div class="text-md lg:mx-3">
            <span class="font-bold">Platform: </span>
            <div class="badge badge-lg badge-primary text-white mx-2">{platform}</div>
          </div>
        )}
      </div>
      <div class="row mb-8">
        <div set:html={markdownify(body)}/>
        <!-- {(sfccAcceleratorData && sfccAcceleratorData.data) && (
          <FeaturesBySection feature_data={sfccAcceleratorData.data} />
        )} -->
      </div>
      <div class="row text-center mt-5">
          <a href="/projects" class="link link-primary text-xl font-bold">Back to Projects</a>
    </div>
  </section>
</Base>
